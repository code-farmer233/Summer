统计数字字符个数
总时间限制: 1000ms 内存限制: 65536kB
描述
输入一行字符，统计出其中数字字符的个数。
输入
一行字符串，总长度不超过255。
输出
输出为1行，输出字符串里面数字字符的个数。
样例输入
Peking University is set up at 1898.
样例输出
4
ac代码：
#include<stdio.h>
#include<string.h> 
int main()
{
	char s[255];
	int count=0,n;
	gets(s); 
	n=strlen(s);
	for(int i=0;i<n;i++)
	if(s[i]-'0'>=0&&s[i]-'0'<=9)
	count++;
	printf("%d",count);
	return 0;
}



找第一个只出现一次的字符
总时间限制: 1000ms 内存限制: 65536kB
描述
给定一个只包含小写字母的字符串，请你找到第一个仅出现一次的字符。如果没有，输出no。
输入
一个字符串，长度小于100000。
输出
输出第一个仅出现一次的字符，若没有则输出no。
样例输入
abcabd
样例输出
c
ac代码：
#include<iostream>
#include<cstring> 
using namespace std;
int a[128]={0};
char b[100010];
int main()
{
	int flag=0;     
	gets(b);
	int s=strlen(b);
	for(int i=0;i<s;i++)
		a[b[i]]++;
	for(int i=0;i<s;i++)
	{
		int t=(int)b[i];
		if(a[t]==1)
		{
			flag=1;
			cout<<b[i]<<endl;
			break; 
		}
	}
	if(flag==0)
		cout<<"no"<<endl;
	return 0;
}
解题思路：这道题如果用笨法子一个一个去比的话，肯定会超时，所以要想一个更简单的算法。这时候就要想到ASCII码，
ASCII码的总共就128个，所以用一个128的数组存放当前下标值大小的字符的出现次数，这样就比较容易实现了。
