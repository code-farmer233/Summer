车厢重组
题目描述
在一个旧式的火车站旁边有一座桥，其桥面可以绕河中心的桥墩水平旋转。一个车站的职工发现桥的长度最多能容纳两节车厢，如果将桥旋转180180度，则可以把相邻两节车厢的位置交换，用这种方法可以重新排列车厢的顺序。于是他就负责用这座桥将进站的车厢按车厢号从小到大排列.
他退休后，火车站决定将这一工作自动化，其中一项重要的工作是编一个程序，输入初始的车厢顺序，计算最少用多少步就能将车厢排序。
输入格式
共两行。
第一行是车厢总数N(≤10000)。
第二行是N个不同的数表示初始的车厢顺序。
输出格式
一个整数，最少的旋转次数。
输入输出样例
输入 
4
4 3 2 1 
输出 
6
代码：
#include <bits/stdc++.h>
using namespace std;
long n,i,j,t,s,a[10000];
int main()
{
	cin>>n;
	for(i=1;i<=n;i++)
	cin>>a[i];
	for(i=1;i<=n-1;i++)
	for(j=1;j<=n-i;j++)
	if(a[j]>a[j+1])
	{
		swap(a[j],a[j+1]);
		s++;
	}
	cout<<s;
	return 0;
}



明明的随机数
题目描述
明明想在学校中请一些同学一起做一项问卷调查，为了实验的客观性，他先用计算机生成了N个1到1000之间的随机整数(N≤100)，对于其中重复的数字，只保留一个，把其余相同的数去掉，
不同的数对应着不同的学生的学号。然后再把这些数从小到大排序，按照排好的顺序去找同学做调查。请你协助明明完成“去重”与“排序”的工作。
输入格式
输入有两行，第1行为1个正整数，表示所生成的随机数的个数N
第2行有N个用空格隔开的正整数，为所产生的随机数。
输出格式
输出也是两行，第1行为1个正整数M，表示不相同的随机数的个数。
第2行为M个用空格隔开的正整数，为从小到大排好序的不相同的随机数。
输入输出样例
输入 
10
20 40 32 67 40 20 89 300 400 15
输出 
8
15 20 32 40 67 89 300 400
代码：
#include<bits/stdc++.h>
using namespace std;
int num,k;
int a[1001];
int b[1001];
int main()
{
	cin>>num;
	for(int i=1;i<=num;i++)
		cin>>a[i];
	sort(a+1,a+num+1);
    for(int i=1;i<=num;i++)
    {
    	if(a[i]!=a[i+1])
        {
  		    k++;
		    b[k]=a[i];	
	    }
	}
	cout<<k<<endl;
	for(int i=1;i<=k;i++)
		cout<<b[i]<<" ";
	return 0;
} 


三位数排序
题目描述
给出三个整数 a,b,c(0≤a,b,c≤100)，要求把这三位整数从小到大排序。
输入格式
无
输出格式
无
输入输出样例
输入 
1 14 5
输出 
1 5 14
输入
2 2 2
输出 
2 2 2
代码：
#include <bits/stdc++.h>
using namespace std;
int main()
{
    int a,b,c;
    cin>>a>>b>>c;
    if(a>b)swap(a,b);
    if(b>c)swap(b,c);
    if(a>b)swap(a,b);
    cout<<a<<' '<<b<<' '<<c;
}
